---
- hosts: leaf
  connection: httpapi
  gather_facts: false
  collections:
    - dellemc.enterprise_sonic

  vars:
    leafcount: "{{ groups['leaf'] | length }}"
    spinecount: "{{ groups['spine'] | length }}"
    switchcount: "{{leafcount|int+spinecount|int}}"

  tasks: 

    - name: Read group_vars/all.yml, count total leafs...
      set_fact:
        groupalldata: "{{lookup('file', 'group_vars/all.yaml') }}"
      delegate_to: localhost
      
        #      vars:
        #        leafcount: "{{ groupalldata | regex_findall('vtep_name') | length }}"

    - name: Request VXLAN tunnel status...
      vars:
        ansible_connection: network_cli
      any_errors_fatal: true
      sonic_command:
        commands:
          - show vxlan tunnel 

      register: vxlan_log
      #when: leafcount|int > 2

    - name: Request BGP routes of Loopbacks...
      vars:
        ansible_connection: network_cli
      any_errors_fatal: true
      sonic_command:
        commands:
          - show ip route bgp | grep /32

      register: bgp_log
      #when: leafcount|int <= 2
      
    - name: Print log results VXLAN tunnels
      debug:
        var: vxlan_log
      delegate_to: localhost
      when: leafcount|int > 2

    - name: Print log results BGP routes
      debug:
        var: bgp_log
      delegate_to: localhost
      when: leafcount|int <= 2

    - name: Valid operational state for VXLAN
      vars:
        tunnelcount: "{{ vxlan_log.stdout_lines[0] | regex_findall('oper_up') | length }}"
      debug:
        msg: "Vtep tunnels are 'oper_up' and in sync [{{tunnelcount}} tunnels, {{leafcount}} leafs]"
      delegate_to: localhost
      when: leafcount|int > 2 and (leafcount|int-2)/2 == tunnelcount|int

    - name: Invalid operational state for VXLAN
      vars:
        tunnelcount: "{{ vxlan_log.stdout_lines[0] | regex_findall('oper_up') | length }}"
      fail:
        msg: "FAIL: Not all Vtep tunnels ({{ tunnelcount }}) detected. Config fault or switch down?"
      delegate_to: localhost
      when: leafcount|int > 2 and  (leafcount|int-2)/2 != tunnelcount|int

    - name: Valid operational state for BGP routes
      vars:
         loopbacks: "{{ bgp_log.stdout_lines[0] | regex_findall('B') | length }}"
      debug:
        msg: "All Loopback routes visible on {{inventory_hostname}} : [{{loopbacks}} routes]"
      delegate_to: localhost
      when: leafcount|int <= 2 and loopbacks|int >= switchcount|int-1

    - name: Invalid operational state for BGP routes
      vars:
         loopbacks: "{{ bgp_log.stdout_lines[0] | regex_findall('B') | length }}"
      fail:
        msg: "FAIL: Not All Loopback routes visible on {{inventory_hostname}} : [{{loopbacks}} routes]"
      delegate_to: localhost
      when: leafcount|int <= 2 and loopbacks|int < switchcount|int-1

